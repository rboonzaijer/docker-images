name: Docker image - Build, Scan, Push

on:
  workflow_call:
    inputs:
      FROM_IMAGE:
        default: 'alpine:latest'
        description: Base Image
        type: string
        required: true
      DOCKERFILE:
          description: Path to Dockerfile
          type: string
          required: true
      IMAGE_NAME:
        default: 'mytargetimage'
        description: Target image name  {DOCKERHUB_USERNAME}/{IMAGE_NAME}:{IMAGE_TAG_SPECIFIC}
        type: string
        required: true
      IMAGE_TAG_SPECIFIC:
        default: '0.1' # 'latest' is also valid if there always will be only 1 image, based on the alpine:latest (like the imagemagick image)
        description: Target image tag {DOCKERHUB_USERNAME}/{IMAGE_NAME}:{IMAGE_TAG_SPECIFIC}
        type: string
        required: true
      IMAGE_TAG_ALIAS:
        default: ''
        description: Target image tag alias (optional)
        type: string
        required: false
      DOCKERHUB_USERNAME:
        default: 'rboonzaijer'
        description: Target repo name {DOCKERHUB_USERNAME}/{IMAGE_NAME}:{IMAGE_TAG_SPECIFIC}
        type: string
        required: true
      SCANNERS:
        default: 'vuln,secret'
        description: Trivy scanners
        type: string
        required: false
    secrets:
      SECRET_DOCKERHUB_TOKEN:
        required: true


jobs:
  build-scan-push:
    name: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      security-events: write
    env:
      FROM_IMAGE: ${{ inputs.FROM_IMAGE }}
      IMAGE_NAME: ${{ inputs.IMAGE_NAME }}
      IMAGE_TAG_SPECIFIC: ${{ inputs.IMAGE_TAG_SPECIFIC }}
      DOCKERFILE: ${{ inputs.DOCKERFILE }}
      IMAGE_TAG_ALIAS: ${{ inputs.IMAGE_TAG_ALIAS }}
      
      TARGET_IMAGE: ${{ inputs.DOCKERHUB_USERNAME }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG_SPECIFIC }}
      TARGET_IMAGE_SCOUT: ${{ inputs.DOCKERHUB_USERNAME }}/dockerscout:${{ inputs.IMAGE_NAME }}-${{ inputs.IMAGE_TAG_SPECIFIC }}
      TARGET_IMAGE_ALIAS: ${{ inputs.DOCKERHUB_USERNAME }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG_ALIAS }}


    steps:
      - name: Git checkout
        uses: actions/checkout@v4.2.2


      - name: Build new Docker image
        run: |
          echo "${{ secrets.SECRET_DOCKERHUB_TOKEN }}" | docker login -u ${{ inputs.DOCKERHUB_USERNAME }} --password-stdin

          docker build --no-cache --pull --build-arg FROM_IMAGE=${{ inputs.FROM_IMAGE }} -f ${{ inputs.DOCKERFILE }} -t ${{ env.TARGET_IMAGE }} .
          docker images ${{ inputs.DOCKERHUB_USERNAME }}/*


      - name: Push alias for Docker Scount
        # You can scan up to 3 repositories with the free tier of Docker Scout
        # https://docs.docker.com/subscription/scout-details/#docker-scout-free
        # So: bundle all images/tags into 1 docker repo ( rboonzaijer/dockerscout:{imagename}-{tagname} ) so all the images will be scanned
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker tag ${{ env.TARGET_IMAGE }} ${{ env.TARGET_IMAGE_SCOUT}}
          docker images ${{ env.TARGET_IMAGE_SCOUT}}
          docker push ${{ env.TARGET_IMAGE_SCOUT}}


      - name: (conditional - when tag alias is given) Tag Docker alias
        if: ${{ inputs.IMAGE_TAG_ALIAS != '' }}
        run: |
          docker tag ${{ env.TARGET_IMAGE }} ${{ env.TARGET_IMAGE_ALIAS }}
          docker images ${{ inputs.DOCKERHUB_USERNAME }}/*


      - name: (conditional - only on main branch OR pull_request) Trivy scan for vulnerabilities
        uses: aquasecurity/trivy-action@0.29.0
        if: ${{ github.ref == 'refs/heads/mainIGNORED' || github.event_name == 'pull_requestIGNORED' }}
        with:
          image-ref: ${{ env.TARGET_IMAGE }}
          #image-ref: alpine:3.10 # has known vulnerability, for testing/sanity check only
          format: 'sarif'
          output: 'trivy-results.${{ inputs.DOCKERHUB_USERNAME }}.${{ inputs.IMAGE_NAME }}.${{ inputs.IMAGE_TAG_SPECIFIC }}.sarif'
          #severity: 'MEDIUM,HIGH,CRITICAL'
          severity: 'HIGH,CRITICAL'
          scanners: ${{ inputs.SCANNERS }}
          exit-code: '1'


      - name: (conditional - only on main branch && always) Trivy upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3.28.2
        if: ${{ github.ref == 'refs/heads/mainIGNORED' && always() }} # if the previous step has found vulnerabilities, then it exits, but run this job always to upload the results
        with:
          sarif_file: 'trivy-results.${{ inputs.DOCKERHUB_USERNAME }}.${{ inputs.IMAGE_NAME }}.${{ inputs.IMAGE_TAG_SPECIFIC }}.sarif'



      - name: (conditional - only on main branch) Push image (only when no errors)
        if: github.ref == 'refs/heads/main'
        run: |
          docker images ${{ env.TARGET_IMAGE }}
          docker push ${{ env.TARGET_IMAGE }}


      - name: (conditional - only on main branch AND when tag alias is given) Push alias image to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' && inputs.IMAGE_TAG_ALIAS }}
        run: |
          docker images ${{ env.TARGET_IMAGE_ALIAS }}
          docker push ${{ env.TARGET_IMAGE_ALIAS }}
